# generated by datamodel-codegen:
#   filename:  PaidSubscriptionListResponse.schema.json
#   timestamp: 2024-05-14T11:09:57+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional

from pydantic import BaseModel, Field


class Type(Enum):
    stripe = 'stripe'
    marketplace = 'marketplace'


class PaidSubscription(BaseModel):
    id: str = Field(
        ...,
        description='The ID of the usage plan that applies to this subscription.',
        title='Usage Plan ID',
    )
    dimension: str = Field(
        ...,
        description='The friendly identifier of the dimension of this subscription.',
        title='Dimension',
    )
    startTime: float = Field(
        ...,
        description='A millisecond timestamp indicating when the subscription started.',
        title='Start Time',
    )
    endTime: float = Field(
        ...,
        description='A millisecond timestamp indicating the next turnover date of the subscription.',
        title='End Time',
    )
    type: Type = Field(
        ...,
        description='`stripe` or `marketplace`, indicates whether this subscription has been initiated via the Stripe payment provider or via AWS Marketplace',
        title='Subscription Type',
    )
    productId: Optional[str] = Field(
        None,
        description='The product this subscription belongs to.',
        title='Product ID',
    )


class PaidSubscriptions(BaseModel):
    __root__: List[PaidSubscription] = Field(
        ..., description='An array of paid subscriptions.', title='Paid Subscriptions'
    )
