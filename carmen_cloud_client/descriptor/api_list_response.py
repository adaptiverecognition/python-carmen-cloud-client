# generated by datamodel-codegen:
#   filename:  APIListResponse.schema.json
#   timestamp: 2024-05-14T11:09:53+00:00

from __future__ import annotations

from typing import Any, Dict, List

from pydantic import BaseModel, Field


class ApiStage(BaseModel):
    id: str = Field(
        ..., description='The unique identifier of the API.', title='API ID'
    )
    api: str = Field(
        ...,
        description='The friendly identifier of the API. E.g.: `vehicle`.',
        title='Friendly API ID',
    )
    stage: str = Field(
        ..., description='Friendly identifier of the API stage.', title='Stage Name'
    )
    swagger: Dict[str, Any] = Field(
        ...,
        description='The Swagger definition of the API stage. Only included if the query parameter `detailed` is `true`.',
        title='API Stage Swagger Definition',
    )
    beta: bool = Field(
        ...,
        description='Indicates whether this stage serves the upcoming, beta quality version of the API.',
        title='Beta',
    )
    authTokenRequired: str = Field(
        ..., description='For internal use only.', title='Authentication Token Required'
    )
    enabled: bool = Field(..., description='For internal use only.', title='Enabled')


class ApiStages(BaseModel):
    __root__: List[ApiStage] = Field(
        ...,
        description='An array of objects listing the properties of API stages.',
        title='API Stages',
    )
